{"version":3,"sources":["utils/constants.ts","utils/handlers.ts","components/AsyncLoading/AsyncLoading.tsx","components/Social/Social.tsx","components/Navbar/Navbar.tsx","components/withSectionItemHOC/withSectionItemHOC.tsx","redux/actionsTypes/StoreTypes.ts","components/ListItem/ListItem.tsx","redux/reducers/reducers.ts","components/Experience/Experience.tsx","redux/actions/actions.ts","components/Education/Education.tsx","components/Personal/Personal.tsx","components/Course/Course.tsx","components/Skill/Skill.tsx","components/Section/Section.tsx","App.tsx","reportWebVitals.ts","redux/store.ts","index.tsx"],"names":["CONSTANTS","APP_NAME","BASE_URL","BASE_URL_API","BASE_URL_API_PATHS","PERSONAL_DATA","SKILL","COURSE","SOCIAL","EXPERIENCE","EDUCATION","MONTHS","handleRequest","reqUrl","personId","constants","axios","get","getFormattedDate","date","language","d","Date","year","getFullYear","monthName","getMonth","AsyncLoading","children","isLoading","hasError","SocialWrapper","styled","div","ItemWrapper","Link","a","getSocialUserId","path","addSlash","split","pop","Item","title","icon","iconColor","color","href","Social","socialInfo","instagram","facebook","telephone","mail","linkedIn","faInstagram","faFacebook","faPhone","faEnvelope","faLinkedin","Wrapper","PhotoWrapper","InfoWrapper","InfoTitle","h1","InfoSubtitle","h3","InfoBody","h4","Navbar","useSelector","state","personalData","personData","useState","loading","setLoading","error","setError","socialData","setSocialData","useEffect","console","log","then","response","data","catch","finally","prefix","name","lastname","description","experience","src","profilePhoto","alt","place","Button","button","TitleWrapper","SectionTitle","props","variant","withSectionItemHOC","WrappedComponent","visible","setVisibility","onClick","faSortUp","faSortDown","StoreTypes","SET_PERSON_ID","SET_PERSON_DATA","SET_PERSONAL_DATA","SET_SOCIAL_DATA","SET_EDUCATION_DATA","SET_COURSE_DATA","SET_EXPERIENCE_DATA","SET_SKILL_DATA","initialState","InfoValue","p","ListItem","imageName","imageValue","subtitle","dispatch","useDispatch","experienceData","payload","type","actionTypes","ExperienceDetails","job","isCurrentJob","jobTitle","jobDescription","startDate","endDate","image","map","index","educationData","educationalData","EducationDetails","degree","span","ItemContainer","PersonalInfo","age","civilStatus","locationName","ItemWithBody","value","courseData","CourseDetails","course","ProgressCircle","skillData","SkillProgress","skill","percentage","className","cx","cy","r","Section","faUser","faBriefcase","faGraduationCap","faBookmark","faCode","AppWrapper","section","NavbarWrapper","SectionWrapper","App","_id","setPersonData","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","action","createStore","ReactDOM","render","store","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a7044178.chunk.js","sourcesContent":["const APP_NAME = \"CV\";\nconst BASE_URL = \"/\";\nconst BASE_URL_API = `${BASE_URL}api/`;\nconst BASE_URL_API_PATHS = {\n  PERSONAL_DATA: \"person\",\n  SKILL: \"skill\",\n  COURSE: \"course\",\n  SOCIAL: \"social\",\n  EXPERIENCE: \"experience\",\n  EDUCATION: \"education\",\n};\nconst MONTHS = {\n  \"es\": [\n    'Enero',\n    'Febreo',\n    'Marzo',\n    'Abril',\n    'Mayo',\n    'Junio',\n    'Julio',\n    'Agosto',\n    'Septiembre',\n    'Octubre',\n    'Noviembre',\n    'Diciembre'\n  ],\n  \"en\": [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December'\n  ]\n}\n\nconst CONSTANTS = {\n  APP_NAME,\n  BASE_URL,\n  BASE_URL_API,\n  BASE_URL_API_PATHS,\n  MONTHS\n};\n\nexport default CONSTANTS;\n","import axios from \"axios\";\nimport { LanguageType } from \"./type\";\nimport constants from \"../utils/constants\";\n\nexport const handleRequest = (reqUrl: string, personId?: string) => {\n  const { BASE_URL_API } = constants;\n  return axios.get(`${BASE_URL_API}${reqUrl}${personId ? \"/\" + personId : \"\"}`);\n};\n\nexport const getFormattedDate = (date: string, language:LanguageType = \"es\") => {\n  const { MONTHS } = constants;\n  const d = new Date(date)\n  const year = d.getFullYear()\n  const monthName = MONTHS[language][d.getMonth()]\n  return monthName + ' ' + year\n}\n","import React from \"react\";\n\ntype Props = {\n  children: JSX.Element;\n  isLoading: boolean;\n  hasError: boolean;\n};\n\nconst AsyncLoading: React.FC<Props> = ({ children, isLoading, hasError }) => {\n  switch (true) {\n    case hasError:\n      return <span>'Error...'</span>;\n    case isLoading:\n      return <span>'Loading...'</span>;\n    case !isLoading && !hasError:\n      return <>{children}</>;\n    default:\n      return null;\n  }\n};\n\nexport default AsyncLoading;\n","import React from \"react\";\nimport { SocialDataType } from \"../../utils/type\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faInstagram,\n  faLinkedin,\n  faFacebook,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport { faPhone, faEnvelope } from \"@fortawesome/free-solid-svg-icons\";\n\nconst SocialWrapper = styled.div`\n  display: block;\n`;\n\nconst ItemWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 0.3rem 0;\n  svg {\n    font-size: 1.5rem;\n  }\n`;\n\nconst Link = styled.a`\n  padding-left: 0.4rem;\n  display: block;\n  color: #262626;\n  text-decoration: none;\n  font-weight: 200;\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\ntype Props = {\n  socialInfo: SocialDataType | undefined;\n};\n\nconst getSocialUserId = (path: string, addSlash: boolean) => `${addSlash ? \"/\" : \"\"}${path.split(\"/\").pop()}`;\n\nconst Item: React.FC<{\n  title: string;\n  iconColor: string;\n  addSlash?: boolean;\n  icon: any;\n}> = ({ title, icon, iconColor, addSlash = false }) => (\n  <ItemWrapper>\n    <FontAwesomeIcon icon={icon} color={iconColor} />\n    <Link href={title}>{getSocialUserId(title, addSlash)}</Link>\n  </ItemWrapper>\n);\n\nconst Social: React.FC<Props> = ({ socialInfo }) => {\n  if (!socialInfo) return null;\n  const { instagram, facebook, telephone, mail, linkedIn } = socialInfo;\n  return (\n    <SocialWrapper>\n      <Item\n        title={instagram}\n        icon={faInstagram}\n        iconColor=\"#262626\"\n        addSlash={true}\n      />\n      <Item\n        title={facebook}\n        icon={faFacebook}\n        iconColor=\"#4267b2\"\n        addSlash={true}\n      />\n      <Item title={telephone} icon={faPhone} iconColor=\"#8bc34ad1\" />\n      <Item title={mail} icon={faEnvelope} iconColor=\"#be4436\" />\n      <Item\n        title={linkedIn}\n        icon={faLinkedin}\n        iconColor=\"#008599\"\n        addSlash={true}\n      />\n    </SocialWrapper>\n  );\n};\n\nexport default Social;\n","import React, { useEffect, useState } from \"react\";\nimport { handleRequest } from \"../../utils/handlers\";\nimport { SocialDataType, StoreType, PersonalDataType } from \"../../utils/type\";\nimport { useSelector } from \"react-redux\";\nimport AsyncLoading from \"../AsyncLoading\";\nimport CONSTANTS from \"../../utils/constants\";\nimport Social from \"../Social\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  width: inherit;\n`;\n\nconst PhotoWrapper = styled(Wrapper)`\n  flex: 20%;\n  justify-content: center;\n  img {\n    width: 150px;\n    height: 150px;\n    border-radius: 50%;\n    border: 1px solid rgba(255, 255, 255, 0.2);\n    box-shadow: 0 0 6px 2px rgb(0 0 0 / 42%);\n  }\n`;\n  \nconst InfoWrapper = styled(Wrapper)`\n  flex: 45%;\n  margin: 0 5%;\n  display: block;\n  color: #554949;\n`;\n\nconst InfoTitle = styled.h1`\n  font-weight: 700;\n  text-transform: capitalize;\n`;\n\nconst InfoSubtitle = styled.h3`\n  font-weight: 500;\n  text-transform: capitalize;\n`;\n\nconst InfoBody = styled.h4`\n  font-weight: 300;\n  text-transform: initial;\n`;\n\nconst SocialWrapper = styled(Wrapper)`\n  flex: 25%;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\ntype Props = {};\n\nconst Navbar: React.FC<Props> = () => {\n  const personId: string = useSelector((state: StoreType) => state.personId);\n  const personalData: PersonalDataType = useSelector((state: StoreType) => state.personData);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<boolean>(false);\n  const [socialData, setSocialData] = useState<SocialDataType>();\n\n  useEffect(() => {\n    console.log(personId)\n    handleRequest(CONSTANTS.BASE_URL_API_PATHS.SOCIAL, personId)\n      .then((response) => setSocialData(response.data))\n      .catch(() => setError(false))\n      .finally(() => setLoading(false));\n  }, [personId]);\n\n  const { prefix, name, lastname, description, experience } = personalData\n  return (\n    <AsyncLoading isLoading={loading} hasError={error}>\n      <Wrapper>\n        <PhotoWrapper>\n          <img src={personalData.profilePhoto} alt=\"Profile\" />\n        </PhotoWrapper>\n        <InfoWrapper>\n          <InfoTitle>{prefix} {lastname} {name}</InfoTitle>\n          <InfoSubtitle>{experience.title} - {experience.place}</InfoSubtitle>\n          <InfoBody>{description}</InfoBody>\n        </InfoWrapper>\n        <SocialWrapper>\n          <Social socialInfo={socialData} />\n        </SocialWrapper>\n      </Wrapper>\n    </AsyncLoading>\n  );\n};\n\nexport default Navbar;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSortDown, faSortUp } from \"@fortawesome/free-solid-svg-icons\";\n\ntype WrappedComponentProps = {\n  title: string;\n  variant?: string;\n  icon: any;\n};\n\nconst Button = styled.button`\n  font-size: 1.4rem;\n  text-align: center;\n  color: #666;\n  border: none;\n  display: block;\n  margin: 1rem;\n  text-align: right;\n  background-color: white;\n  cursor: pointer;\n`;\n\nconst Wrapper = styled.div`\n  color: black;\n  display: block;\n`;\n\nconst TitleWrapper: any = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  text-transform: uppercase;\n`;\n\nconst SectionTitle:any = styled.div`\n  background-color: ${(props: {\n    variant: string\n  }) => props.variant ? props.variant : \"lightgray\"};\n  padding: 0.6rem;\n  border-radius: 0.2rem;\n  color: white;\n  font-weight: 700;\n  letter-spacing: 0.9px;\n  span {\n    margin: 0.5rem;\n  }\n  svg {\n    width: 1rem;\n  }\n`;\n\nconst withSectionItemHOC = <P extends object>(\n  WrappedComponent: React.ComponentType<P>\n) => {\n  const WrappedComponentFormatted: React.FC<WrappedComponentProps> = ({ ...props }: WrappedComponentProps) => {\n    const [visible, setVisibility] = useState(false);\n    return (\n      <Wrapper>\n        <TitleWrapper>\n          <SectionTitle variant={props.variant}>\n            <FontAwesomeIcon icon={props.icon} />\n            <span> {props.title} </span>\n          </SectionTitle>\n          <Button onClick={() => setVisibility(!visible)}>\n            <FontAwesomeIcon icon={!visible ? faSortDown : faSortUp } />\n          </Button>\n        </TitleWrapper>\n        {visible && <WrappedComponent {...(props as P)} />}\n      </Wrapper>\n    );\n  }\n  return WrappedComponentFormatted\n};\n\nexport default withSectionItemHOC;\n","const SET_PERSON_ID = \"SET_PERSON_ID\";\nconst SET_PERSON_DATA = \"SET_PERSON_DATA\";\nconst SET_PERSONAL_DATA = \"SET_PERSONAL_DATA\";\nconst SET_SOCIAL_DATA = \"SET_SOCIAL_DATA\";\nconst SET_EDUCATION_DATA = \"SET_EDUCATION_DATA\";\nconst SET_COURSE_DATA = \"SET_COURSE_DATA\";\nconst SET_EXPERIENCE_DATA = \"SET_EXPERIENCE_DATA\";\nconst SET_SKILL_DATA = \"SET_SKILL_DATA\";\n\nconst StoreTypes = {\n  SET_PERSON_ID,\n  SET_PERSON_DATA,\n  SET_PERSONAL_DATA,\n  SET_SOCIAL_DATA,\n  SET_EDUCATION_DATA,\n  SET_COURSE_DATA,\n  SET_EXPERIENCE_DATA,\n  SET_SKILL_DATA,\n};\n\nexport default StoreTypes;\n","import React from \"react\";\nimport { ListItemDetailsType } from \"../../utils/type\";\nimport CONSTANTS from \"../../utils/constants\";\nimport withSectionItemHOC from \"../withSectionItemHOC\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 1rem 0;\n  flex-wrap: wrap;\n  justify-content: space-between;\n`;\n\nconst PhotoWrapper = styled(Wrapper)`\n  flex: 20%;\n  justify-content: center;\n  img {\n    width: 150px;\n    object-fit: scale-down;\n    height: 150px;\n    border-radius: 50%;\n    border: 1px solid rgba(255, 255, 255, 0.2);\n    box-shadow: 0 0 6px 2px rgb(0 0 0 / 42%);\n  }\n`;\n  \nconst InfoWrapper = styled(Wrapper)`\n  flex: 80%;\n  display: block;\n  @media (max-width:801px)  {\n    text-align: center;\n  }\n`;\n\nconst InfoValue = styled.p`\n  display: block;\n  font-size: 1rem;\n  color: #554949;\n  font-weight: 300;\n`;\n  \n  const InfoTitle = styled(InfoValue)`\n  font-size: 1.2rem;\n  font-weight: 500;\n`;\n\n\ntype Props = ListItemDetailsType\n\nexport const ListItem: React.FC<Props> = ({\n  imageName,\n  imageValue, \n  title, \n  subtitle, \n  description\n}) => {\n\n  return (\n    <Wrapper>\n      <PhotoWrapper>\n        <img src={imageValue} alt={imageName} />\n      </PhotoWrapper>\n      <InfoWrapper>\n        <InfoTitle>{title}</InfoTitle>\n        <InfoValue>{subtitle}</InfoValue>\n        <InfoValue>{description}</InfoValue>\n      </InfoWrapper>\n    </Wrapper>\n  );\n};\n\nexport default ListItem;\n","import actionTypes from \"../actionsTypes/StoreTypes\";\nimport { StoreType, StoreAction } from \"../../utils/type\";\n\nvar initialState: StoreType;\n\nconst reducer = (\n  state: StoreType = initialState,\n  action: StoreAction\n): StoreType => {\n  switch (action.type) {\n    case actionTypes.SET_PERSON_ID:\n      return {\n        ...state,\n        personId: action.payload\n      };\n    case actionTypes.SET_PERSON_DATA:\n      return {\n        ...state,\n        personData: action.payload\n      };\n    case actionTypes.SET_PERSONAL_DATA:\n      return {\n        ...state,\n        personalData: action.payload\n      };\n    case actionTypes.SET_EXPERIENCE_DATA:\n      return {\n        ...state,\n        experienceData: action.payload\n      };\n    case actionTypes.SET_EDUCATION_DATA:\n      return {\n        ...state,\n        educationalData: action.payload\n      };\n    case actionTypes.SET_COURSE_DATA:\n      return {\n        ...state,\n        courseData: action.payload\n      };\n    case actionTypes.SET_SKILL_DATA:\n      return {\n        ...state,\n        skillData: action.payload\n      };\n    case actionTypes.SET_SOCIAL_DATA:\n      return {\n        ...state,\n        ...action.payload,\n      };\n  }\n  return state;\n};\n\nexport default reducer;\n","import React, { useEffect, useState } from \"react\";\nimport { ExperienceDataType, StoreType } from \"../../utils/type\";\nimport CONSTANTS from \"../../utils/constants\";\nimport { handleRequest, getFormattedDate } from \"../../utils/handlers\";\nimport withSectionItemHOC from \"../withSectionItemHOC\";\nimport AsyncLoading from \"../AsyncLoading\";\nimport { setExperienceData } from \"../../redux/actions/actions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport ListItem from \"../ListItem\";\n\ntype Props = {};\n\nexport const Experience: React.FC<Props> = () => {\n  const dispatch = useDispatch();\n  const personId: string = useSelector((state: StoreType) => state.personId);\n  const experienceData: ExperienceDataType[] = useSelector(\n    (state: StoreType) => state.experienceData\n  );\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (experienceData) {\n      setLoading(false);\n      return;\n    }\n    handleRequest(CONSTANTS.BASE_URL_API_PATHS.EXPERIENCE, personId)\n      .then((response) => dispatch(setExperienceData(response.data)))\n      .catch(() => setError(false))\n      .finally(() => setLoading(false));\n  }, [dispatch, personId, experienceData, loading]);\n\n  const ExperienceDetails: React.FC<{\n    job: ExperienceDataType;\n    isCurrentJob: boolean;\n  }> = ({ job, isCurrentJob }) => {\n    const { jobTitle, jobDescription, startDate, endDate, place } = job;\n    return (\n      <ListItem\n        imageValue={place.image}\n        imageName={place.name}\n        title={ `${jobTitle} (${jobDescription}) ` }\n        subtitle={ `${getFormattedDate(startDate)} - ${isCurrentJob ? 'Actualidad' : getFormattedDate(endDate) }` }\n        description={place.name}\n      />\n    );\n  };\n\n  return (\n    <AsyncLoading isLoading={loading} hasError={error}>\n      <>\n        {experienceData && experienceData.map((job: ExperienceDataType, index: number) => (\n          <ExperienceDetails job={job} key={index} isCurrentJob={ index === 0 } />\n        ))}\n      </>\n    </AsyncLoading>\n  );\n};\n\nexport default withSectionItemHOC(Experience);\n","import { CourseDataType, EducationDataType, ExperienceDataType, PersonalDataType, SkillDataType } from \"../../utils/type\";\nimport actionTypes from \"../actionsTypes/StoreTypes\";\n\ntype PersonIdAction = {\n  type: string;\n  payload: string;\n};\n\ntype PersonDataAction = {\n  type: string;\n  payload: PersonalDataType;\n};\n\ntype PersonalDataAction = {\n  type: string;\n  payload: PersonalDataType\n};\n\ntype ExperienceDataAction = {\n  type: string;\n  payload: ExperienceDataType\n};\n\ntype EducationalDataAction = {\n  type: string;\n  payload: EducationDataType\n};\n\ntype CourseDataAction = {\n  type: string;\n  payload: CourseDataType\n};\n\ntype SkillDataAction = {\n  type: string;\n  payload: SkillDataType\n};\n\n\nexport function setPersonId(payload: PersonIdAction[\"payload\"]) {\n  const action: PersonIdAction = {\n    type: actionTypes.SET_PERSON_ID,\n    payload,\n  };\n  return action;\n}\n\nexport function setPersonData(payload: PersonDataAction[\"payload\"]) {\n  const action: PersonDataAction = {\n    type: actionTypes.SET_PERSON_DATA,\n    payload,\n  };\n  return action;\n}\n\nexport function setPersonalData(payload: PersonalDataAction[\"payload\"]) {\n  const action: PersonalDataAction = {\n    type: actionTypes.SET_PERSONAL_DATA,\n    payload,\n  };\n  return action;\n}\n\nexport function setExperienceData(payload: ExperienceDataAction[\"payload\"]) {\n  const action: ExperienceDataAction = {\n    type: actionTypes.SET_EXPERIENCE_DATA,\n    payload,\n  };\n  return action;\n}\n\nexport function setEducationalData(payload: EducationalDataAction[\"payload\"]) {\n  const action: EducationalDataAction = {\n    type: actionTypes.SET_EDUCATION_DATA,\n    payload,\n  };\n  return action;\n}\n\nexport function setCourseData(payload: CourseDataAction[\"payload\"]) {\n  const action: CourseDataAction = {\n    type: actionTypes.SET_COURSE_DATA,\n    payload,\n  };\n  return action;\n}\n\nexport function setSkillData(payload: SkillDataAction[\"payload\"]) {\n  const action: SkillDataAction = {\n    type: actionTypes.SET_SKILL_DATA,\n    payload,\n  };\n  return action;\n}\n","import React, { useEffect, useState } from \"react\";\nimport { EducationDataType, StoreType } from \"../../utils/type\";\nimport { handleRequest, getFormattedDate } from \"../../utils/handlers\";\nimport CONSTANTS from \"../../utils/constants\";\nimport withSectionItemHOC from \"../withSectionItemHOC\";\nimport AsyncLoading from \"../AsyncLoading\";\nimport ListItem from \"../ListItem\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setEducationalData } from \"../../redux/actions/actions\";\n\ntype Props = {};\n\nexport const Education: React.FC<Props> = () => {\n  const dispatch = useDispatch();\n  const personId: string = useSelector((state: StoreType) => state.personId);\n  const educationData: EducationDataType[] = useSelector(\n    (state: StoreType) => state.educationalData\n  );\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (educationData) {\n      setLoading(false);\n      return;\n    }\n    handleRequest(CONSTANTS.BASE_URL_API_PATHS.EDUCATION, personId)\n      .then((response) => dispatch(setEducationalData(response.data)))\n      .catch(() => setError(false))\n      .finally(() => setLoading(false));\n  }, [personId, educationData, dispatch]);\n\n  type EducationDetailsProps = {\n    job: EducationDataType;\n  };\n\n  const EducationDetails: React.FC<EducationDetailsProps> = ({ job }) => {\n    const { degree, description, startDate, endDate, place } = job;\n    return (\n      <ListItem\n        imageValue={place.image}\n        imageName={place.name}\n        title={ `${degree} (${description}) ` }\n        subtitle={ `${getFormattedDate(startDate)} - ${getFormattedDate(endDate)}` }\n        description={place.name}\n      />\n    );\n  };\n\n  return (\n    <AsyncLoading isLoading={loading} hasError={error}>\n      <>\n        {educationData && educationData.map((job: EducationDataType, index: number) => (\n          <EducationDetails job={job} key={index} />\n        ))}\n      </>\n    </AsyncLoading>\n  );\n};\n\nexport default withSectionItemHOC(Education);\n","import React from \"react\";\nimport withSectionItemHOC from \"../withSectionItemHOC\";\nimport { StoreType, PersonalDataType } from \"../../utils/type\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\n\nconst Item = styled.span`\n  width: 100%;\n  color: #554949;\n  span:first-child {\n    font-weight: 400;\n    font-size: 1.2rem;\n  }\n  span:not(:first-child) {\n    font-size: 1  rem;\n    font-weight: 200;\n  }\n  @media (min-width:801px) {\n    flex: 48%;\n    padding: 1rem 0 1rem 2%;\n  }\n  @media (max-width:801px) {\n    padding: 1rem 0;\n  }\n`;\n\nconst ItemContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\ntype Props = {};\n\nconst Personal: React.FC<Props> = () => {\n  const personalData: PersonalDataType = useSelector(\n    (state: StoreType) => state.personData\n  );\n\n  const PersonalInfo: React.FC<{\n    data: PersonalDataType;\n  }> = ({ data }) => {\n    if (!data) return null;\n    const { name, lastname, age, civilStatus, locationName } = data;\n\n    type ItemBodyProps = {\n      title: string;\n      value: string;\n    };\n\n    const ItemWithBody: React.FC<ItemBodyProps> = ({ title, value }) => (\n      <Item>\n        <span>{title}: </span>\n        <span>{value}</span>\n      </Item>\n    );\n\n    return (\n      <ItemContainer>\n        <ItemWithBody title=\"Nombre\" value={`${name} ${lastname}`} />\n        <ItemWithBody title=\"Edad\" value={`${age} años`} />\n        <ItemWithBody title=\"Estado Civil\" value={civilStatus} />\n        <ItemWithBody title=\"Lugar de residencia\" value={locationName} />\n      </ItemContainer>\n    );\n  };\n\n  return (\n    <PersonalInfo data={personalData} />\n  );\n};\n\nexport default withSectionItemHOC(Personal);\n","import React, { useEffect, useState } from \"react\";\nimport { CourseDataType, StoreType } from \"../../utils/type\";\nimport { handleRequest, getFormattedDate } from \"../../utils/handlers\";\nimport withSectionItemHOC from \"../withSectionItemHOC\";\nimport ListItem from \"../ListItem\";\nimport AsyncLoading from \"../AsyncLoading\";\nimport CONSTANTS from \"../../utils/constants\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setCourseData } from \"../../redux/actions/actions\";\n\ntype Props = {};\n\nexport const Course: React.FC<Props> = () => {\n  const dispatch = useDispatch();\n  const personId: string = useSelector((state: StoreType) => state.personId);\n  const courseData: CourseDataType[] = useSelector(\n    (state: StoreType) => state.courseData\n  );\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (courseData) {\n      setLoading(false);\n      return;\n    }\n    handleRequest(CONSTANTS.BASE_URL_API_PATHS.COURSE, personId)\n      .then((response) => dispatch(setCourseData(response.data)))\n      .catch(() => setError(false))\n      .finally(() => setLoading(false));\n  }, [personId, courseData, dispatch]);\n\n  type CourseDetailsProps = {\n    course: CourseDataType;\n  };\n\n  const CourseDetails: React.FC<CourseDetailsProps> = ({ course }) => {\n    const { name, description, date, place } = course;\n    return <ListItem\n      imageValue={place.image}\n      imageName={place.name}\n      title={name}\n      subtitle={ `${getFormattedDate(date)}` }\n      description={description}\n    />\n  };\n\n  return (\n    <AsyncLoading isLoading={loading} hasError={error}>\n      <>\n        { courseData && courseData.map((course: CourseDataType, index: number) => (\n          <CourseDetails course={course} key={index} />\n        ))}\n      </>\n    </AsyncLoading>\n  );\n};\n\nexport default withSectionItemHOC(Course);\n","import React, { useEffect, useState } from \"react\";\nimport { SkillDataType, StoreType } from \"../../utils/type\";\nimport CONSTANTS from \"../../utils/constants\";\nimport { handleRequest } from \"../../utils/handlers\";\nimport withSectionItemHOC from \"../withSectionItemHOC\";\nimport AsyncLoading from \"../AsyncLoading\";\nimport { setSkillData } from \"../../redux/actions/actions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 1rem;\n  justify-content: space-between;\n`;\n\nconst Item = styled.div`\n  width: 100%;\n  flex: 48%;\n  padding: 1rem 0 1rem 2%;\n  color: #000000;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-direction: row;\n  span:first-child {\n    font-weight: 400;\n  }\n  span:not(:first-child) {\n    font-weight: 200;\n  }\n`;\n\nconst ItemContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: center;\n`;\n\nconst ProgressCircle = styled.div`\n  align-items:center;\n  justify-content:center;\n  display:flex;\n  .box {\n    zoom: .7;\n    width: 10rem;\n    text-align: center;\n    text-transform: uppercase;\n    padding: 2rem;\n    word-break: break-word;\n    display:flex;\n    justify-content:center;\n    align-items:center;\n    position:relative;\n    flex-direction:column;\n    transition: transform .2s;\n    .percent {\n      width:150px;\n      height:150px;\n      position:relative;\n      svg {\n        width:150px;\n        height:150px;\n        position:relative;\n        circle {\n          width:150px;\n          height:150px;\n          fill:none;\n          stroke-width:10;\n          stroke:#000;\n          transform:translate(5px,5px);\n          stroke-dasharray:440;\n          stroke-dashoffset:440;\n          stroke-linecap:round;\n          :nth-child(1)\n          {\n            stroke-dashoffset:0;\n            stroke:#f3f3f3;\n          }\n          :nth-child(2)\n          {\n            stroke-dashoffset:calc(440 - (440 * 87) / 100);\n            stroke: #aa8f7c;\n          }\n        }\n      }\n      .num {\n        top:0;\n        left:0;\n        width:100%;\n        height:100%;\n        display:flex;\n        justify-content:center;\n        align-items:center;\n        position:absolute;\n        color:#111;\n        h2 {\n          font-size:48px;\n          span {\n            font-size:24px;\n          }\n        }\n      }\n    }\n    .text { \n      padding 10px 0 0;\n      color:#999;\n      font-weight:700;\n      letter-spacing:1px;\n    }\n  }\n`;\n\ntype Props = {};\n\nexport const Skill: React.FC<Props> = () => {\n  const dispatch = useDispatch();\n  const personId: string = useSelector((state: StoreType) => state.personId);\n  const skillData: SkillDataType[] = useSelector(\n    (state: StoreType) => state.skillData\n  );\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (skillData) {\n      setLoading(false);\n      return;\n    }\n    handleRequest(CONSTANTS.BASE_URL_API_PATHS.SKILL, personId)\n      .then((response) => dispatch(setSkillData(response.data)))\n      .catch(() => setError(false))\n      .finally(() => setLoading(false));\n  }, [personId, dispatch, skillData]);\n\n  type SkillDetailsProps = {\n    skill: SkillDataType;\n  };\n\n  const SkillDetails: React.FC<SkillDetailsProps> = ({ skill }) => {\n    const { name, percentage } = skill;\n    return (\n      <Item>\n        <span>{name}</span>\n        <span>{percentage}</span>\n      </Item>\n    )\n  };\n\n  const SkillProgress: React.FC<SkillDetailsProps> = ({ skill }) => {\n    const { name, percentage } = skill;\n    return (\n      <ProgressCircle>\n        <div className=\"box\">\n          <div className=\"percent\">\n            <svg>\n              <circle cx=\"70\" cy=\"70\" r=\"70\"></circle>\n              <circle cx=\"70\" cy=\"70\" r=\"70\"></circle>\n            </svg>\n            <div className=\"num\">\n              <h2>{percentage}<span>%</span></h2>\n            </div>\n          </div>\n          <h2 className=\"text\">{name}</h2>\n        </div>\n      </ProgressCircle>\n    )\n  }\n\n  return (\n    <AsyncLoading isLoading={loading} hasError={error}>\n      <ItemContainer>\n        {skillData && skillData.map((skill: SkillDataType, index: number) => (\n          <SkillProgress skill={skill} key={index} />\n        ))}\n      </ItemContainer>\n    </AsyncLoading>\n  );\n};\n\nexport default withSectionItemHOC(Skill);\n","import React from \"react\";\nimport Experience from \"../Experience\";\nimport Education from \"../Education\";\nimport Personal from \"../Personal\";\nimport Course from \"../Course\";\nimport Skill from \"../Skill\";\nimport {\n  faUser,\n  faBriefcase,\n  faGraduationCap,\n  faBookmark,\n  faCode,\n} from \"@fortawesome/free-solid-svg-icons\";\n\ntype Props = {};\n\nexport const Section: React.FC<Props> = () => {\n  return (\n    <div>\n      <Personal\n        title={\"Datos Personales\"}\n        variant={\"#f3ca0099\"}\n        icon={faUser}\n      />\n      <Experience\n        title={\"Experiencia\"}\n        variant={\"#ffb76c\"}\n        icon={faBriefcase}\n      />\n      <Education\n        title={\"Educacion\"}\n        variant={\"#f48a79\"}\n        icon={faGraduationCap}\n      />\n      <Course title={\"Cursos\"} variant={\"#94d4d0\"} icon={faBookmark} />\n      <Skill title={\"Skills\"} variant={\"#da80cf\"} icon={faCode} />\n    </div>\n  );\n};\n\nexport default Section;\n","import React, { useEffect, useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Section from \"./components/Section\";\nimport { handleRequest } from \"./utils/handlers\";\nimport { useDispatch } from \"react-redux\";\nimport { setPersonId, setPersonData } from \"./redux/actions/actions\";\nimport AsyncLoading from \"./components/AsyncLoading\";\nimport CONSTANTS from \"./utils/constants\";\nimport styled from \"styled-components\";\n\ntype Props = {};\n\nconst AppWrapper = styled.div`\n  margin: 0;\n  padding: 0;\n  font-family: 'Raleway', sans-serif;\n  font-weight: 100;\n`;\n\nconst Wrapper = styled.section`\n  background-color: white;\n  padding: 1rem;\n  margin: 1rem;\n  border-radius: 20px;\n  box-shadow: 0px 0px 4px 1px rgb(58 56 56 / 43%);\n`;\n\nconst NavbarWrapper = styled(Wrapper)`\n  color: #999;\n`;\n\nconst SectionWrapper = styled(Wrapper)`\n  color: #777;\n`;\n\nconst App: React.FC<Props> = () => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<boolean>(false);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    handleRequest(CONSTANTS.BASE_URL_API_PATHS.PERSONAL_DATA)\n      .then((response: any) => {\n        dispatch(setPersonId(response.data._id))\n        dispatch(setPersonData(response.data))\n      })\n      .catch(() => setError(true))\n      .finally(() => setLoading(false));\n  }, [dispatch]);\n\n  return (\n    <AsyncLoading isLoading={loading} hasError={error}>\n      <AppWrapper>\n        <NavbarWrapper>\n          <Navbar />\n        </NavbarWrapper>\n        <SectionWrapper>\n          <Section />\n        </SectionWrapper>\n      </AppWrapper>\n    </AsyncLoading>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore } from \"redux\";\nimport reducer from \"./reducers/reducers\";\n\nexport default createStore(reducer);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n    ,\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}